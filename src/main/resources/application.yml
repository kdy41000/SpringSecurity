
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      
spring:
  application:
   name: user-service
  main:
   allow-circular-references: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: root
    password: 1234

  jpa:
    hibernate:
      ddl-auto: update #create update none  https://smpark1020.tistory.com/140?category=857916 참고(위험한 기능이기 때문에 주의할 것!)
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    
  # google, naver oauth2 setting
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 739208500337-sdagglm4vkfrhkvpor591rbi3idtcovp.apps.googleusercontent.com
            client-secret: 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
            scope: profile,email
          naver:
            client-id: BJZWLDSPUqf9tGGQiEI5
            client-secret: ZJhrmwTJeP
            scope: profile,email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver   #구글은 설정 안해도 되나 네이버는 설정필요
            
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌.